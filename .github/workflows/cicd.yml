name: CI-CD (EB)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  EB_APP_NAME: ReviewsAndMarketing
  EB_ENV_NAME: reviewsandmarketing-prod
  S3_BUCKET: reviewsandmarketing-eb-artifacts-us-east-1

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install & Build (standalone)
        run: |
          npm ci
          npm run build
          rm -rf bundle && mkdir -p bundle
          cp -R .next/standalone bundle/
          cp -R .next/static bundle/.next/static
          cp -R public bundle/public || true
          echo 'web: node .next/standalone/server.js' > bundle/Procfile
          cat > bundle/package.json <<'JSON'
          {
            "name": "reviewsandmarketing-runtime",
            "private": true,
            "scripts": { "start": "node .next/standalone/server.js" }
          }
          JSON
          (cd bundle && zip -r ../artifact.zip .)

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: |
          KEY="reviewsandmarketing/${{ github.sha }}.zip"
          aws s3 cp artifact.zip "s3://${{ env.S3_BUCKET }}/${KEY}"
          echo "S3_KEY=${KEY}" >> $GITHUB_ENV

      - name: Create EB Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "${{ env.EB_APP_NAME }}" \
            --version-label "${{ github.sha }}" \
            --source-bundle S3Bucket="${{ env.S3_BUCKET }}",S3Key="${{ env.S3_KEY }}"

      - name: Deploy to EB
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ env.EB_ENV_NAME }}" \
            --version-label "${{ github.sha }}"
